version: '3'

tasks:
  default:
    desc: Show help for all tasks
    cmds:
      - task --list-all

  docker:
    desc: Start the Neo4j database using Docker Compose
    cmds:
      - docker compose up -d
    status:
      - test ! -z "$(docker compose ps --quiet neo4j)"

  server:
    desc: Run the MCP stdio server
    deps: [docker]
    cmds:
      - poetry run python src/server.py

  test:
    desc: Run all tests (pytest, integration tests, and individual test scripts)
    deps: [docker]
    cmds:
      - task: test-integration
      - task: test-db
      - task: test-config
      - task: test-client

  test-config:
    desc: Test the MCP configuration file
    deps: [docker]
    cmds:
      - poetry run python src/test_mcp_config.py

  test-client:
    desc: Run the MCP client test
    deps: [docker]
    cmds:
      - poetry run python src/test_mcp_client.py

  test-db:
    desc: Test the Neo4j database connection
    deps: [docker]
    cmds:
      - poetry run python src/test_neo4j_connection.py

  test-integration:
    desc: Run integration tests
    deps: [docker]
    cmds:
      - poetry run pytest tests/integration/

  run:
    desc: Start both Docker services and the MCP stdio server
    deps: [docker]
    cmds:
      - task: server

  down:
    desc: Stop all Docker services
    cmds:
      - docker compose down

  dev:
    desc: Start development environment (Docker + Server + Test)
    deps: [docker]
    cmds:
      - task: server
      - task: test

  format:
    desc: Format code using black and isort
    cmds:
      - poetry run black .
      - poetry run isort .

  lint:
    desc: Run flake8 linter
    cmds:
      - poetry run flake8

  help:
    desc: Show detailed help for all tasks
    cmds:
      - task --help
      - task --list-all

  build:
    desc: Build standalone executable using PyInstaller
    cmds:
      - mkdir -p dist
      - poetry run pyinstaller --onefile --name neo4j_mcp_server --add-data ".env:." src/server.py
    generates:
      - dist/neo4j_mcp_server

  start:
    desc: Run the built standalone executable (builds if needed)
    deps: [docker]
    cmds:
      - task: build
        status:
          - test -f dist/neo4j_mcp_server
      - chmod +x dist/neo4j_mcp_server
      - ./dist/neo4j_mcp_server
    sources:
      - dist/neo4j_mcp_server
      

